<launch>
  <arg name="debug" default="false" />
  <arg name="extra_gazebo_args" default=""/>
  <!-- <arg name="grasping_init" default="true"/> -->
  <!-- <arg name="grasping_init_wait_time" default="20"/> -->
  <!-- <arg name="init" default="false" /> -->
  <arg name="paused" default="false" />
  <!-- <arg name="use_local_build" default="false" /> -->
  <arg name="verbose" default="true" />
  <arg name="walk_test" default="false"/>

  <arg if="$(optenv USE_CUSTOM_WORLD 0)" name="world_name" default="$(env CUSTOM_WORLD_PATH)" />
  <arg unless="$(optenv USE_CUSTOM_WORLD 0)" name="world_name" default="$(find srcsim)/worlds/unique.world" />
  <!-- <arg unless="$(optenv USE_CUSTOM_WORLD 0)" name="world_name" default="$(find src_hubo)/worlds/unique.world" /> -->

  <include file="$(find src_hubo)/launch/hubo_sim_gazebo_sync.launch" pass_all_args="false">
    <env name="GAZEBO_RESOURCE_PATH" value="$(find srcsim)/worlds"/>
    <env name="GAZEBO_MODEL_PATH" value="$(env GAZEBO_MODEL_PATH):$(find srcsim)/models"/>
    <env name="GAZEBO_PLUGIN_PATH" value="$(find srcsim)/plugins"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="extra_gazebo_args" default="$(arg extra_gazebo_args)"/>
    <arg name="paused" value="$(arg paused)" />
    <arg name="verbose" value="$(arg verbose)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <!-- spawn the robot model in the gazebo -->
  <!-- <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" -->
  <!--       args="-sdf -file /home/y-tanaka/.gazebo/models/DRC_hubo/DRC_hubo.sdf -model DRC_hubo" -->
  <!--       respawn="false" output="screen" /> -->
  <node pkg="drc_podo_connector" type="podo_connector" name="podo_connector" output="screen"/>

  <!-- set param "robot_description" with URDF model -->
  <!-- <arg name="model" default="$(find drc_plugin)/urdf/DRC_HUBO.urdf"/> -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" /> -->
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->
  <!-- turn on the robot_state_publisher for /tf -->
  <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/> -->

  <!-- turn on the rviz for visualization -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find drc_plugin)/rviz/drc.rviz"/>

</launch>
