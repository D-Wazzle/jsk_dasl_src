<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="$(find src_hubo)/worlds/empty.world"/>
  <arg name="urdf_spawn_wait_time" default="6"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="extra_gazebo_args" default="$(arg extra_gazebo_args)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="headless" value="$(arg headless)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="physics" value="$(arg physics)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <!-- Need to delay URDF spawning, otherwise the gazebo plugin that accesses sensor data might start before the controller manager creates the topics -->
  <node name="$(anon urdf_spawner)" pkg="src_hubo" type="delayed_roslaunch.sh" args="$(arg urdf_spawn_wait_time) src_hubo spawn_urdf_model_from_robot_description.launch modelName:=DRC_hubo zOffset:=0.0" output="screen"/>

</launch>
